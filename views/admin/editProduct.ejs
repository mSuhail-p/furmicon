<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Product Details</title>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <!-- Croppie CSS (if using) -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/croppie/2.6.5/croppie.min.css" />
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <!-- Custom CSS -->



    <style>
        body {
            background-color: #f8f9fa;
            /* Light gray background */
            padding-top: 20px;
        }

        .content-main {
            display: flex;
            justify-content: center;
        }

        .content-header {
            background-color: #343a40;
            /* Dark background for header */
            color: #fff;
            /* White text */
            padding: 15px;
            border-radius: 5px;
            margin-bottom: 20px;
        }

        .card {
            margin-bottom: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            /* Subtle shadow */
        }

        .form-control {
            border-radius: 0;
        }

        .form-label {
            font-weight: bold;
        }

        .btn-primary {
            background-color: #007bff;
            /* Primary button color */
            border-color: #007bff;
        }

        .btn-primary:hover {
            background-color: #0069d9;
            /* Darker shade on hover */
            border-color: #0062cc;
        }

        .btn-outline-secondary {
            color: #6c757d;
            /* Secondary button color */
            border-color: #6c757d;
        }

        .btn-outline-secondary:hover {
            color: #495057;
            /* Darker shade on hover */
            background-color: #e9ecef;
            /* Light background on hover */
            border-color: #dee2e6;
        }

        .rounded-2 {
            border-radius: 2px;
        }

        .error-message {
            color: #dc3545;
            /* Red color for error messages */
            margin-top: 5px;
        }
    </style>
</head>

<body>

    <div class="container">
        <div class="content-main">
            <div class="col-md-8">
                <div class="content-header">
                    <h2 class="text-center">Edit Product Details</h2>
                </div>
                <form action="/admin/edit_product/<%= sendToEdit._id %>" onsubmit="return validateForm()" method="post"
                    enctype="multipart/form-data">
                    <div class="card">
                        <div class="card-body">
                            <div class="form-group">
                                <label for="productName" class="form-label">Product Name</label>
                                <input type="text" class="form-control" id="productName" name="name"
                                    value="<%= sendToEdit.name %>" required>
                                <p class="error-message" id="error-name"></p>
                            </div>
                            <div class="form-group">
                                <label for="quantity" class="form-label">Quantity</label>
                                <input type="number" class="form-control" id="quantity" name="quantity"
                                    value="<%= sendToEdit.quantity %>" required>
                                <p class="error-message" id="error-quantity"></p>
                            </div>
                            <div class="form-group">
                                <label for="category" class="form-label">Category</label>
                                <select class="form-control" id="category" name="category" required>
                                    <option value="" disabled>Select Category</option>
                                    <% categories.forEach((category)=> { %>
                                        <option value="<%= category._id %>" <%=sendToEdit.category._id==category._id
                                            ? 'selected' : '' %>>
                                            <%= category.name %>
                                        </option>
                                        <% }); %>
                                </select>
                                <p class="error-message" id="error-category"></p>
                            </div>
                            <div class="form-group">
                                <label for="price" class="form-label">Price</label>
                                <input type="number" class="form-control" id="price" name="price"
                                    value="<%= sendToEdit.price %>" required>
                                <p class="error-message" id="error-price"></p>
                            </div>
                        </div>
                    </div>

                    <div class="y mb-4">
                        <label for="offer">New Offer :</label>
                        <% if (offer.length> 0) { %>
                            <button type="button"
                                onclick="modalOpen(<%= JSON.stringify(offer) %>,'<%=sendToEdit._id%>')"
                                class="btn btn-primary" id="openModalButton" data-toggle="modal"
                                data-target="#exampleModal">
                                Click here
                            </button>
                            <% } %>

                    </div>

                    <% if( typeof sendToEdit.offer !='undefined' ){ %>


                        <div class="container mb-3 mt-3  " id="cardOffer">
                            <div class="row">
                                <div class="col-md-6 mx-auto">
                                    <div class="card">
                                        <div class="card-body">
                                            <h3 class="card-title text-center">
                                                <%=sendToEdit.offer.offerName%>
                                            </h3>
                                            <h1 class="text-center" style="font-size: 60px;">
                                                <%=sendToEdit.offer.offPercentage %>%
                                            </h1>
                                            <h5 class="card-title text-center">
                                                <%=sendToEdit.offer.description%>
                                            </h5>
                                            <button class="btn small border border-5 text-danger"
                                                onclick="removeOffer('<%=sendToEdit._id%>')">Romove offer</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <% } %>




                            <div class="card">
                                <div class="card-body">
                                    <div class="form-group">
                                        <label for="description" class="form-label">Description</label>
                                        <textarea class="form-control" id="description" name="description"
                                            rows="4"><%= sendToEdit.description %></textarea>
                                        <p class="error-message" id="error-description"></p>
                                    </div>
                                </div>
                            </div>

                            <div class="card">
                                <div class="card-body row">
                                    <div class="col-md-4">
                                        <label class="form-label">Image 1</label>
                                        <img class="img-thumbnail rounded-2" id="preview-1"
                                            src="/userimages/<%= sendToEdit.images[0] %>" alt="">
                                        <input type="file" class="form-control-file mt-2" name="image1"
                                            onchange="previewImage(event, 1)">
                                    </div>
                                    <div class="col-md-4">
                                        <label class="form-label">Image 2</label>
                                        <img class="img-thumbnail rounded-2" id="preview-2"
                                            src="/userimages/<%= sendToEdit.images[1] %>" alt="">
                                        <input type="file" class="form-control-file mt-2" name="image2"
                                            onchange="previewImage(event, 2)">
                                    </div>
                                    <div class="col-md-4">
                                        <label class="form-label">Image 3</label>
                                        <img class="img-thumbnail rounded-2" id="preview-3"
                                            src="/userimages/<%= sendToEdit.images[2] %>" alt="">
                                        <input type="file" class="form-control-file mt-2" name="image3"
                                            onchange="previewImage(event, 3)">
                                    </div>
                                </div>
                                <p class="error-message" id="image-Error"></p>
                            </div>

                            <div class="form-group text-center mt-3">
                                <button type="submit" class="btn btn-primary mr-2">Edit Product</button>
                                <a href="/admin/products" class="btn btn-outline-secondary">Cancel</a>
                            </div>
                </form>
            </div>
        </div>
    </div>


    <!-- Offer modal starts form here -->



    <!-- The Modal -->
    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Select an Offer</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" id="modalBody">
                    <!-- Dynamic content will be added here -->
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="saveButton">Save</button>
                </div>
            </div>
        </div>
    </div>





    <!-- jQuery and Bootstrap JS -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <!-- Croppie JS (if using) -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/croppie/2.6.5/croppie.min.js"></script>


    <script>

        function removeOffer(productId) {
            event.preventDefault()

            axios.patch(`/admin/removeOffer/?id=${productId}&&type=product`)
                .then(Response => {
                    if(Response.data.status){
                        document.getElementById('cardOffer').remove()
                    }
                })
                .catch(error => {
                    console.log(error)
                })
        }
    </script>


    <script>
        // document.addEventListener('DOMContentLoaded', function () {
        function modalOpen(offer, productId) {

            console.log('offer[1].offerName')
            console.log(offer)
            const openModalButton = document.getElementById('openModalButton');
            const modalBody = document.getElementById('modalBody');
            const saveButton = document.getElementById('saveButton');

            // Clear the modal body first
            modalBody.innerHTML = '';

            // Populate the modal with cards
            offer.forEach((item, index) => {
                console.log(item.offerName)
                const card = document.createElement('div');
                card.className = 'card';
                card.innerHTML = `
    <div class="card-body">
        <h5 class="card-title">${item.offerName}</h5>
        <p class="card-text">${item.offPercentage}% off</p>
        <input type="checkbox" name="options" value="${item._id}" class="single-checkbox">
         
    </div>
`;
                modalBody.appendChild(card);
            });

            // Ensure only one checkbox is selected at a time
            const checkboxes = modalBody.querySelectorAll('.single-checkbox');
            checkboxes.forEach(checkbox => {
                checkbox.addEventListener('change', function () {
                    checkboxes.forEach(box => {
                        if (box !== this) box.checked = false;
                    });
                });
            });
            // });

            // Handle the save button click
            saveButton.addEventListener('click', function () {
                const selectedCheckbox = document.querySelector('.single-checkbox:checked');
                if (selectedCheckbox) {
                    const selectedValue = selectedCheckbox.value;
                    console.log(selectedValue, 'it is selected')
                    console.log('Selected value:', selectedValue);


                    axios.patch(`/admin/saveOffer/${selectedValue}/${productId}`)
                        .then(Response => {
                            if (Response.data.status) {
                                console.log("coompelted")
                                window.location.reload()
                            }
                        })
                        .catch(error => {
                            console.log(error)
                        })
                } else {
                    console.log('No option selected.');
                }
                $('#exampleModal').modal('hide'); // Hide the modal
            });

        }
        // });
    </script>





    <script>
        function previewImage(event, imgIndex) {
            let input = event.target;
            let image = document.getElementById(`preview-${imgIndex}`);
            if (input.files && input.files[0]) {
                let reader = new FileReader();
                reader.onload = function (e) {
                    image.src = e.target.result


                        ;
                }
                reader.readAsDataURL(input.files[0]);
            }
        }

        function validateForm() {
            const productName = document.getElementById("productName").value.trim();
            const quantity = document.getElementById("quantity").value.trim();
            const category = document.getElementById("category").value.trim();
            const price = document.getElementById("price").value.trim();
            const description = document.getElementById("description").value.trim();
            const imageInputs = document.querySelectorAll('input[type="file"]');
            const existingImages = document.querySelectorAll('.img-thumbnail');
            let isValid = true;

            // Reset error messages
            document.querySelectorAll('.error-message').forEach(el => el.textContent = '');

            // Validate Product Name
            if (productName === '') {
                document.getElementById("error-name").textContent = "Product name should not be empty";
                isValid = false;
            } else if (!/^[a-zA-Z\s]+$/.test(productName)) {
                document.getElementById("error-name").textContent = "Product name should contain only alphabetic characters";
                isValid = false;
            }

            // Validate Quantity
            if (quantity === '') {
                document.getElementById("error-quantity").textContent = "Quantity should not be empty";
                isValid = false;
            } else if (quantity <= 0) {
                document.getElementById("error-quantity").textContent = "Quantity should be a positive number";
                isValid = false;
            }

            // Validate Category
            if (category === '') {
                document.getElementById("error-category").textContent = "Please choose a category";
                isValid = false;
            }

            // Validate Price
            if (price === '') {
                document.getElementById("error-price").textContent = "Price should not be empty";
                isValid = false;
            } else if (price <= 0) {
                document.getElementById("error-price").textContent = "Price should be a positive number";
                isValid = false;
            }

            // Validate Description
            if (description === '') {
                document.getElementById("error-description").textContent = "Description should not be empty";
                isValid = false;
            }

            // Validate Images
            let imageCount = 0;
            imageInputs.forEach(input => {
                if (input.files.length > 0) {
                    imageCount++;
                    const file = input.files[0];
                    if (!['image/jpeg', 'image/jpg', 'image/png'].includes(file.type)) {
                        document.getElementById("image-Error").textContent = `File ${file.name} is not an image file`;
                        isValid = false;
                    }
                }
            });

            if (imageCount === 0 && !Array.from(existingImages).some(img => img.src)) {
                document.getElementById("image-Error").textContent = "Please upload at least one image";
                isValid = false;
            } else if (imageCount > 3) {
                document.getElementById("image-Error").textContent = "You can upload up to 3 images only";
                isValid = false;
            }

            return isValid;
        }

    </script>

</body>

</html>