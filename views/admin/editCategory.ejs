<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Category</title>

    <!-- Include Bootstrap CSS (choose either local or CDN link) -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>

<body style="background: rgb(153, 153, 152);">

    <div class="container mt-5 w-50 border border-2 bg-white rounded-4   ">
        <h3 class="text-center mb-4  ">Edit Category</h3>
        <form>
            <!-- Name field -->

            <% if (editCategory){ %>

                <style>
                    .error-message {
                        display: none;
                        /* Initially hide the error message */
                        color: red;
                        /* Customize the color of the error message */
                        font-size: 0.8rem;
                        /* Customize the font size of the error message */
                        margin-top: 0.2rem;
                        /* Add some space between the input and the error message */
                    }
                </style>





                <div class="mb-3">
                    <label for="name" class="form-label  ">Name:</label>
                    <input type="text" id="name" name="name" value="<%= editCategory.name %>"
                        class="form-control border-black border-3" required>
                    <div id="errorMessage" class="error-message"></div>
                </div>

                <!-- Description field -->
                <div class="mb-3">
                    <label for="description" class="form-label  ">Description:</label>
                    <textarea id="description" name="description" rows="4" class="form-control  border-black border-3"
                        required><%= editCategory.description %></textarea>
                </div>



                <div class="y mb-4">
                    <label for="offer">New Offer :</label>
                    <% if (categoryOffer.length> 0) { %>
                        <button type="button"
                            onclick="modalOpen(<%= JSON.stringify(categoryOffer) %>,'<%=editCategory._id%>')"
                            class="btn btn-primary" id="openModalButton" data-toggle="modal"
                            data-target="#exampleModal">
                            Click here
                        </button>
                        <% } %>

                </div>
                <% if( typeof editCategory.offer !='undefined' ){ %>


                    <div class="container mb-3 mt-3 " id="offerCategory">
                        <div class="row">
                            <div class="col-md-6 mx-auto">
                                <div class="card">
                                    <div class="card-body">
                                        <h3 class="card-title text-center">
                                            <%=editCategory.offer.offerName%>
                                        </h3>
                                        <h1 class="text-center" style="font-size: 60px;">
                                            <%=editCategory.offer.offPercentage %>%
                                        </h1>
                                        <h5 class="card-title text-center">
                                            <%=editCategory.offer.description%>
                                        </h5>
                                        <button class="btn small border border-5 text-danger"
                                            onclick="removeOffer('<%=editCategory._id%>')">Romove offer</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <% } %>



                        <!-- Submit button -->
                        <button type="submit" class="btn btn-primary  border-black border-2 mb-3 "
                            onclick="is_duplecate(event, '<%= editCategory._id %>')">Submit</button>

                        <input type="hidden" name="id" value="<%=editCategory._id %>">
        </form>
    </div>

    <% } %>

        <!-- The Modal -->
        <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Select an Offer</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body" id="modalBody">
                        <!-- Dynamic content will be added here -->
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" id="saveButton">Save</button>
                    </div>
                </div>
            </div>
        </div>


        <script>
            function removeOffer(categoryId) {
                event.preventDefault()
                axios.patch(`/admin/removeOffer/?id=${categoryId}&&type=category`)
                    .then(response => {
                        document.getElementById('offerCategory').remove()

                    })
                    .catch(error => {
                        console.log('error at removeOffer(categoryside):', error)
                    })
            }


        </script>


        <script>
            // document.addEventListener('DOMContentLoaded', function () {
            function modalOpen(offer, categoryId) {

                console.log('offer[1].offerName')
                console.log(offer)
                const openModalButton = document.getElementById('openModalButton');
                const modalBody = document.getElementById('modalBody');
                const saveButton = document.getElementById('saveButton');

                // Clear the modal body first
                modalBody.innerHTML = '';

                // Populate the modal with cards
                offer.forEach((item, index) => {
                    console.log(item.offerName)
                    const card = document.createElement('div');
                    card.className = 'card';
                    card.innerHTML = `
                    <div class="card-body">
                        <h5 class="card-title">${item.offerName}</h5>
                        <p class="card-text">${item.offPercentage}% off</p>
                        <input type="checkbox" name="options" value="${item._id}" class="single-checkbox">
                    </div>
                `;
                    modalBody.appendChild(card);
                });

                // Ensure only one checkbox is selected at a time
                const checkboxes = modalBody.querySelectorAll('.single-checkbox');
                checkboxes.forEach(checkbox => {
                    checkbox.addEventListener('change', function () {
                        checkboxes.forEach(box => {
                            if (box !== this) box.checked = false;
                        });
                    });
                });
                // });

                // Handle the save button click
                saveButton.addEventListener('click', function () {
                    const selectedCheckbox = document.querySelector('.single-checkbox:checked');
                    if (selectedCheckbox) {
                        const selectedValue = selectedCheckbox.value;
                        console.log(selectedValue, 'it is selected')
                        console.log('Selected value:', selectedValue);


                        axios.patch(`/admin/saveCategoryOffer/${selectedValue}/${categoryId}`)
                            .then(Response => {
                                if (Response.data.status) {
                                    window.location.reload()
                                }
                            })
                            .catch(error => {
                                console.log(error)
                            })
                    } else {
                        console.log('No option selected.');
                    }
                    $('#exampleModal').modal('hide'); // Hide the modal
                });

            }
            // });
        </script>




        <!-- Include Bootstrap JS (choose either local or CDN link) -->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-pzjw8W+8ML/LUEHI5ts7ZLxFWh1bSquyXvs1qKH/cz5EML5Z8eqt1OKtLqca/8aQ"
            crossorigin="anonymous"></script>
        <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>


        <script>

            function is_duplecate(event, editCategory_id) {
                event.preventDefault();
                // const button = document.getElementById(`toggleCategory_${index}`);

                const formData = {
                    name: document.getElementById('name').value,
                    description: document.getElementById('description').value,
                    id: editCategory_id

                }

                const errorMessage = document.getElementById('name')

                fetch(`/admin/editingCategory/${editCategory_id}`, {


                    method: 'PUT',
                    headers: {
                        'content-type': 'application/json'
                    },
                    body: JSON.stringify(formData)

                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.message !== 'existing') {
                            window.location.href = data.message
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'The category name is currently in use.',
                                text: 'Use unique one '
                            });
                        }

                    })
                    .catch(error => {
                        console.error('Errorrrr:', error);
                    });
            }





        </script>


        <!-- The Modal -->




</body>

</html>